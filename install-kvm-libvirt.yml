---
- name: Install KVM and libvirt
  hosts: all
  gather_facts: no
  become: yes
  tasks:
    - name: Gather facts
      setup:

    - name: Check if OS is Debian 
      fail:
        msg: "This playbook can only be run on Debian. Exiting."
      when: ansible_distribution != 'Debian'

    - name: Ensure ipv6 is disabled
      lineinfile:
        path: /etc/sysctl.conf
        regexp: "^{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: 'net.ipv6.conf.all.disable_ipv6', line: 'net.ipv6.conf.all.disable_ipv6 = 1' }
        - { regexp: 'net.ipv6.conf.default.disable_ipv6', line: 'net.ipv6.conf.default.disable_ipv6 = 1' }
        - { regexp: 'net.ipv6.conf.lo.disable_ipv6', line: 'net.ipv6.conf.lo.disable_ipv6 = 1' }

    - name: Ensure routing is enabled
      lineinfile:
        path: /etc/sysctl.conf
        regexp: '^net.ipv4.ip_forward'
        line: 'net.ipv4.ip_forward=1'

    - name: Reload sysctl settings
      command:
        cmd: sysctl -p

    - name: Install necessary packages
      apt:
        name:
          - firmware-misc-nonfree 
          - firmware-linux-nonfree
          - qemu-kvm
          - qemu-utils 
          - libvirt-daemon-system
          - libvirt-daemon 
          - libvirt-clients
          - python3-libvirt
          - bridge-utils
          - virtinst 
          - libosinfo-bin 
          - wget 
          - dnsmasq 
          - ovmf
        state: present

    - name: Start and enable libvirt daemon
      service:
        name: libvirtd
        state: started
        enabled: yes

    - name: Ensure the directory for VMs and ISO exists
      file:
        path: /vmfs/ISO
        state: directory
        mode: '0755'

    - name: Check if a reboot is required.
      ansible.builtin.stat:
        path: /var/run/reboot-required
        get_md5: no
      register: reboot_required_file

    - name: Reboot the server (if required).
      ansible.builtin.reboot:
      when: reboot_required_file.stat.exists == true

